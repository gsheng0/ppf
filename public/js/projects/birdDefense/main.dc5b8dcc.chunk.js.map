{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","utilities/Map.js","utilities/Vector.js","utilities/Player.js","utilities/Util.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","components/enemies/Enemy.js","components/enemies/Bat.js","components/enemies/MassiveBat.js","utilities/Entity.js","components/towers/Bird.js","components/projectiles/Projectile.js","components/projectiles/Egg.js","components/towers/Chicken.js","components/projectiles/Rock.js","components/towers/Crow.js","components/projectiles/MassiveEgg.js","components/towers/MassiveChicken.js","components/towers/Woodpecker.js","components/towers/Nest.js","utilities/Factory.js","components/factories/MassiveBatFactory.js","components/factories/BatFactory.js","utilities/Draw.js","index.js","utilities/handlers.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","Map","this","birds","enemies","projectiles","factories","shouldRemoveProjectiles","nest","undefined","player","enemy","push","bird","factory","projectile","forEach","exist","birdToRemove","filter","enemyToRemove","projectileToRemove","factoryToRemove","Vector","x","y","otherVector","x2","y2","angle","Math","atan2","PI","sqrt","pow","Player","id","name","money","amount","Util","num","min","max","vec","topLeft","bottomRight","withinBounds","leftX","topY","width","height","withinBoundsCoords","imgDir","chicken","Image","src","bat","loading","crow","egg","rock","woodpecker","title","IMAGES","CHICKEN","BAT","CROW","EGG","NEST","ROCK","WOODPECKER","TITLE","radians","sin","image","degrees","size_x","size_y","ctx","save","translate","xRotationShift","yRotationShift","rotate","drawImage","error","console","log","restore","color","beginPath","fillStyle","rect","fill","closePath","strokeStyle","stroke","radius","arc","miliseconds","currentTime","Date","getTime","floor","random","suffix","type","data","onload","call","XMLHttpRequest","open","setRequestHeader","send","frameNumber","JSON","stringify","USER_ID","object","location","counter","action","buildAction","request","e","response","setName","handleSync","parse","expPlayer","getName","getId","reply","alert","errorMessage","setScreenNum","setRoomCode","code","setHost","setBirdPlayer","roomCode","setOtherPlayer","otherPlayer","getOtherPlayer","toString","side","setBatPlayer","start","other","getBatPlayer","swapSides","setIsRequest","getBirdPlayer","changeSideRequest","isFromHost","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","property","receiver","Reflect","get","base","hasOwnProperty","desc","getOwnPropertyDescriptor","value","_setPrototypeOf","p","_inherits","subClass","superClass","create","constructor","_typeof","obj","Symbol","iterator","_possibleConstructorReturn","self","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","result","Super","NewTarget","arguments","apply","TOP_LEFT","BOTTOM_RIGHT","loaded","BLACK","GREEN","RED","FRAME_DELAY","Enemy","map","health","armor","damage","vision","attackSpeed","moveSpeed","size","maxHealth","getNest","getCenter","getAngleTo","current","birdsInVision","moveComponent","setMoveComponent","getLocation","alive","cooldown","range","angleChanged","distanceFrom","getSize","inVision","time","xDistance","yDistance","prev","updateBirdsInVision","getMap","distance","updateTarget","canAttack","attack","removeEnemy","getPlayer","addMoney","en","takeDamage","getHealth","Bat","MAX_HEALTH","ARMOR","DAMAGE","VISION","ATTACK_SPEED","MOVE_SPEED","SIZE","MONEY","draw","getAngle","addEnemy","MassiveBat","build","Entity","removeBird","Bird","enemiesInRange","inRange","updateEnemiesInRange","closest","Infinity","Projectile","stepVector","shouldRemove","enemiesInContact","inContact","removeProjectile","Egg","Chicken","RANGE","addProjectile","copy","fillRect","strokeRect","addBird","Rock","Crow","MassiveEgg","MassiveChicken","Woodpecker","Nest","Factory","spawnRate","product","MassiveBatFactory","addFactory","BatFactory","canvas","birdPlayer","batPlayer","handleSyncResponse","pressed","selection","screenNum","hoverStart","hoverEnd","clickName","clickRoom","startText","hoverSinglePlayer","isHost","isRequesting","init","document","getElementById","getContext","setContext","loadImages","font","getGameId","addEventListener","relativeX","clientX","offsetLeft","relativeY","clientY","offsetTop","out","startMeasure","measureText","singleMeasure","handleMouseMove0","endMeasure","handleMouseMove3","text","getIsHost","changeMeasure","changeSide","handleMouseUp1","isBird","button","handleMouseDown2","screen","createGameRoom","joinGameRoom","nameMeasure","roomMeasure","handleMouseUp0","getMoney","removeMoney","place","handleMouseUp2","reset","handleMouseUp3","substring","syncRoom","setMap","game","sync","spawnBat","fillText","drawBirdPanel","drawBatPanel","strokeCircle","frame","clearRect","drawStartScreen","getIsRequest","drawWaitRoom","otherMeasure","seconds","minutes","drawEndScreen","clear","window","setInterval","host","temp","getMapInstance","getClickChangeSides","getClickRequestChangeSides"],"mappings":"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","file":"static/js/main.dc5b8dcc.chunk.js","sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export class Map{\r\n    constructor(){\r\n        this.birds = [];\r\n        this.enemies = [];\r\n        this.projectiles = [];\r\n        this.factories = [];\r\n        this.shouldRemoveProjectiles = [];\r\n        this.nest = undefined;\r\n        this.player = undefined;\r\n    }\r\n    getNest() { return this.nest; }\r\n    getPlayer() { return this.player;}\r\n    \r\n    setPlayer(player){\r\n        this.player = player;\r\n    }\r\n    setNest(nest){\r\n        this.nest = nest;\r\n    }\r\n    addEnemy(enemy){\r\n        this.enemies.push(enemy);\r\n    }\r\n    addBird(bird){\r\n        this.birds.push(bird);\r\n    }\r\n    addFactory(factory){\r\n        this.factories.push(factory);\r\n    }\r\n    addProjectile(projectile){\r\n        this.projectiles.push(projectile);\r\n    }\r\n\r\n    simulate(){\r\n        this.enemies.forEach((enemy) => {enemy.exist()});\r\n        this.birds.forEach((bird) => {bird.exist()});\r\n        this.projectiles.forEach((projectile) => {projectile.exist()});\r\n    }\r\n    clear(){\r\n        this.birds = [];\r\n        this.enemies = [];\r\n        this.projectiles = [];\r\n        this.factories = [];\r\n        this.shouldRemoveProjectiles = [];\r\n    }\r\n    removeBird(birdToRemove){\r\n        this.birds = this.birds.filter((bird) => { return bird !== birdToRemove});\r\n    }\r\n    removeEnemy(enemyToRemove){\r\n        this.enemies = this.enemies.filter((enemy) => { return enemy !== enemyToRemove});\r\n    }\r\n    removeProjectile(projectileToRemove){\r\n        this.projectiles = this.projectiles.filter((projectile) => { return projectile !== projectileToRemove});\r\n    }\r\n    removeFactory(factoryToRemove){\r\n        this.factories = this.factories.filter((factory) => { return factory !== factoryToRemove});\r\n    }\r\n\r\n\r\n}","export class Vector{\r\n    constructor(x, y){\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    getAngleTo(otherVector) {\r\n        let x2 = otherVector.x;\r\n        let y2 = otherVector.y;\r\n\r\n        let radians = Math.atan2(y2 - this.y, x2 - this.x);\r\n        let angle = radians * (180/Math.PI);\r\n        angle = 360 - angle;\r\n        if(angle >= 360)\r\n            angle -= 360;\r\n        return angle; \r\n    }\r\n    distanceFrom(otherVector){\r\n        let x2 = otherVector.x;\r\n        let y2 = otherVector.y;\r\n\r\n        return Math.sqrt(Math.pow(this.x - x2, 2) + Math.pow(this.y - y2, 2));\r\n    }\r\n    toString() { return \"[\" + this.x + \", \" + this.y + \"]\"; }\r\n    copy(){\r\n        return new Vector(this.x, this.y)\r\n    }\r\n}","export class Player{\r\n    constructor(id, name =\"Guest\"){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.money = 300;\r\n    }\r\n    getId() { return this.id; }\r\n    getName() { return this.name;}\r\n    getMoney() { return this.money; }\r\n    toString() { \r\n        return \"Name: \" + this.name + \" id: \" + this.id;\r\n    }\r\n    removeMoney(amount) { \r\n        this.money -= amount;\r\n    }\r\n}","import {Vector} from \"./Vector\";\r\nimport {setRoomCode, setScreenNum, setOtherPlayer, setName, setHost, setBirdPlayer, getOtherPlayer, setBatPlayer, swapSides, getBatPlayer, getBirdPlayer, setIsRequest} from \"../index\";\r\nimport { Player } from \"./Player\";\r\n\r\nexport class Util {\r\n    static TOP_LEFT = new Vector(0, 0);\r\n    static BOTTOM_RIGHT = new Vector(1000, 800);\r\n    static IMAGES = {};\r\n    static loaded = false;\r\n    static BLACK = \"#000000\";\r\n    static GREEN = \"#149414\";\r\n    static RED = \"#ff0000\";\r\n    static USER_ID = 1;\r\n    static FRAME_DELAY = 1;\r\n    static withinBounds(num, min, max) {\r\n        return num >= min && num <= max;\r\n    }\r\n    static withinBoundsCoords(vec, topLeft, bottomRight){\r\n        return this.withinBounds(vec.x, topLeft.x, bottomRight.x) && this.withinBounds(vec.y, topLeft.y, bottomRight.y);\r\n    } \r\n\r\n    static withinBoundsRect(vec, leftX, topY, width, height){\r\n        return Util.withinBoundsCoords(vec, new Vector(leftX, topY), new Vector(leftX + width, topY + height)); \r\n    }\r\n\r\n    static loadImages(){\r\n        /*var \r\n        myImage = new Image(100, 100);\r\n        myImage.src = \"egg.png\";\r\n        let finalImage = myImage;*/\r\n        let imgDir = \"imageBirdDefense/\";\r\n        let chicken = new Image();\r\n        chicken.src = imgDir + \"chicken.png\";\r\n\r\n        let bat = new Image();\r\n        bat.loading = \"eager\"\r\n        bat.src = imgDir + \"bat.png\";\r\n\r\n        let crow = new Image();\r\n        crow.loading = \"eager\";\r\n        crow.src = imgDir + \"crow.png\";\r\n\r\n        let egg = new Image();\r\n        egg.loading = \"eager\";\r\n        egg.src = imgDir + \"egg.png\";\r\n\r\n        let nest = new Image();\r\n        nest.loading = \"eager\";\r\n        nest.src = imgDir + \"nest.png\";\r\n\r\n        let rock = new Image();\r\n        rock.loading = \"eager\";\r\n        rock.src = imgDir + \"rock.png\";\r\n\r\n        let woodpecker = new Image();\r\n        woodpecker.loading = \"eager\";\r\n        woodpecker.src = imgDir + \"woodpecker.png\";\r\n\r\n        let title = new Image();\r\n        title.loading = \"eager\";\r\n        title.src = imgDir + \"bird_defense.png\";\r\n\r\n\r\n        Util.IMAGES.CHICKEN = chicken;\r\n        Util.IMAGES.BAT = bat;\r\n        Util.IMAGES.CROW = crow;\r\n        Util.IMAGES.EGG = egg;\r\n        Util.IMAGES.NEST = nest;\r\n        Util.IMAGES.ROCK = rock;\r\n        Util.IMAGES.WOODPECKER = woodpecker;\r\n        Util.IMAGES.NEST = nest;\r\n        Util.IMAGES.TITLE = title;\r\n\r\n\r\n    }\r\n    static xRotationShift(radians){\r\n        return 0.75 * Math.sin(radians - Math.PI/4) + 0.5;\r\n    }\r\n    static yRotationShift(radians){\r\n        return 0.75 * Math.sin(radians - 3 * Math.PI/4) + 0.5;\r\n    }\r\n    static draw(image, x, y, degrees, size_x = image.width, size_y = image.height){\r\n        let ctx = Util.ctx;\r\n        degrees = -1 * degrees + 90;\r\n        let radians = degrees * Math.PI/180;\r\n        ctx.save();\r\n        ctx.translate(x, y);//top left corner\r\n        ctx.translate(Util.xRotationShift(radians) * size_x, Util.yRotationShift(radians) * size_y);\r\n        ctx.rotate(radians);\r\n        try{\r\n            ctx.drawImage(image, 0, 0, size_x, size_y);\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }\r\n        ctx.restore();\r\n    }\r\n    static setContext(ctx){\r\n        this.ctx = ctx;\r\n    }\r\n\r\n    static fillRect(x, y, width, height, color){\r\n        let ctx = Util.ctx;\r\n        ctx.beginPath();\r\n        ctx.fillStyle = color;\r\n        ctx.rect(x, y, width, height);\r\n        ctx.fill();\r\n        ctx.closePath();\r\n    }\r\n\r\n    static strokeRect(x, y, width, height, color) {\r\n        let ctx = Util.ctx;\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = color;\r\n        ctx.rect(x, y, width, height);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n\r\n    static strokeCircle(x, y, radius, color){\r\n        let ctx = Util.ctx;\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = color;\r\n        ctx.arc(x, y, radius, 0, 2 * Math.PI);\r\n        ctx.stroke();\r\n        ctx.closePath();\r\n    }\r\n\r\n    static sleep(miliseconds) {\r\n        var currentTime = new Date().getTime();\r\n     \r\n        while (currentTime + miliseconds >= new Date().getTime()) {\r\n        }\r\n     }\r\n\r\n    static random(min, max){\r\n        return Math.floor(Math.random() * (max - min) + min);\r\n    }\r\n\r\n    static request(suffix, type, data = undefined, onload = undefined){\r\n        const call = new XMLHttpRequest();\r\n        call.open(type, \"https://service.gsheng.me:8443/bird/\" + suffix);\r\n\r\n        call.setRequestHeader('Content-Type', 'application/json');\r\n        if(data !== undefined){\r\n            call.send(data);\r\n        }\r\n        else{\r\n            call.send();\r\n        }\r\n        if(onload !== undefined){\r\n            call.onload = () => {\r\n                onload(call);\r\n            };\r\n        }\r\n    }\r\n\r\n    static buildAction(type, x, y, frameNumber){\r\n        return JSON.stringify({\r\n            type: type,\r\n            x: x,\r\n            y: y,\r\n            frameNumber: frameNumber,\r\n            id: Util.USER_ID,\r\n        });\r\n    }\r\n\r\n    static place(object, location, counter){\r\n        let action = Util.buildAction(object, location.x, location.y, counter);\r\n        Util.request(\"send\", \"POST\", action, (e)=> {\r\n            console.log(\"recieved\");\r\n        });\r\n    }\r\n\r\n    static getGameId(){\r\n        Util.request(\"join\", \"GET\", undefined, (e) => {\r\n            Util.USER_ID = e.response;\r\n            console.log(\"You are user: \" + Util.USER_ID);\r\n            setName(\"Guest \" + Util.USER_ID);\r\n        })\r\n\r\n    }\r\n    static sync(handleSync){\r\n        let data = JSON.stringify({id: Util.USER_ID, type: \"sync request\"})\r\n        Util.request(\"sync\", \"POST\", data, (e) => {\r\n            if(e.response === \"[]\")\r\n                return;\r\n            console.log(JSON.parse(e.response)[0]);\r\n            handleSync(JSON.parse(e.response));\r\n\r\n        })\r\n    }\r\n\r\n    static createGameRoom(player){\r\n        let expPlayer = {name: player.getName(), id: player.getId()}\r\n        let data = JSON.stringify({id: Util.USER_ID, type: \"create request\", player: expPlayer});\r\n        Util.request(\"room/create\", \"POST\", data, (e) => {\r\n            let reply = JSON.parse(e.response);\r\n            console.log(reply);\r\n            if(reply.error){\r\n                alert(reply.errorMessage);\r\n                setScreenNum(0);\r\n            }\r\n            else{\r\n                setRoomCode(reply.code);\r\n                setHost(true);\r\n                setBirdPlayer(player);\r\n            }\r\n        })\r\n    }\r\n\r\n    static joinGameRoom(roomCode, player){\r\n        let expPlayer = {name: player.getName(), id: player.getId()}\r\n        let data = JSON.stringify({id: Util.USER_ID, type: \"join room request\", code: roomCode, player: expPlayer});\r\n        Util.request(\"room/join\", \"POST\", data, (e) => {\r\n            let reply = JSON.parse(e.response);\r\n            console.log(reply);\r\n            if(reply.error){\r\n                alert(reply.errorMessage);\r\n                setScreenNum(0);\r\n            }\r\n            else{\r\n                setOtherPlayer(new Player(reply.otherPlayer.id, reply.otherPlayer.name));\r\n                console.log(getOtherPlayer().toString());\r\n                if(reply.side === \"bird\"){\r\n                    setBirdPlayer(getOtherPlayer());\r\n                    setBatPlayer(player);\r\n                }\r\n                else{\r\n                    setBatPlayer(getOtherPlayer());\r\n                    setBirdPlayer(player);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    static syncRoom(roomCode, player, start){\r\n        let expPlayer = {name: player.getName(), id: player.getId()}\r\n        let data = JSON.stringify({id: Util.USER_ID, type: \"sync room request\", code: roomCode, player: expPlayer, start: start});\r\n        Util.request(\"room/sync\", \"POST\", data, (e) =>{\r\n            let reply = JSON.parse(e.response);\r\n            \r\n            if(reply.error){\r\n                alert(reply.errorMessage);\r\n            }\r\n            if(reply.other){\r\n                setOtherPlayer(new Player(reply.player.id, reply.player.name));\r\n                if(reply.side === \"bat\"){\r\n                    if(getBatPlayer() === undefined){\r\n                        setBatPlayer(getOtherPlayer());\r\n                    }\r\n                    else if(getBatPlayer().getId() !== getOtherPlayer().getId()){\r\n                        swapSides();\r\n                        setIsRequest(false);\r\n                    }\r\n                }\r\n                else{\r\n                    if(getBirdPlayer() === undefined){\r\n                        setBirdPlayer(getOtherPlayer());\r\n                    }\r\n                    else if(getBirdPlayer().getId() !== getOtherPlayer().getId()){\r\n                        swapSides();\r\n                        setIsRequest(false);\r\n                    }\r\n                }\r\n\r\n                if(reply.changeSideRequest){\r\n                    setIsRequest(true);\r\n                }\r\n                //console.log(reply);\r\n                if(reply.start){\r\n                    setScreenNum(2);\r\n                }\r\n            }\r\n        })\r\n    }\r\n    static changeSide(roomCode, isFromHost){\r\n        let data = JSON.stringify({id: Util.USER_ID, type: \"change side request\", roomCode: roomCode, isFromHost: isFromHost});\r\n        Util.request(\"room/change\", \"POST\", data, (e) => {\r\n            let reply = JSON.parse(e.response);\r\n\r\n            if(reply.error){\r\n                alert(reply.errorMessage);\r\n            }\r\n            else{\r\n                \r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import superPropBase from \"@babel/runtime/helpers/esm/superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import { Vector } from \"../../utilities/Vector\";\r\n\r\nexport class Enemy{\r\n    constructor(map, health, armor, location, damage, vision, attackSpeed, moveSpeed, size, image, money){\r\n        this.map = map;\r\n        this.health = health;\r\n        this.armor = armor;\r\n        this.location = location;\r\n        this.damage = damage;\r\n        this.vision = vision;\r\n        this.attackSpeed = attackSpeed;\r\n        this.moveSpeed = moveSpeed / 10.0;\r\n        this.size = size;\r\n        this.maxHealth = health;\r\n        this.target = map.getNest();\r\n        this.image = image;\r\n        this.money = money;\r\n        this.angle = this.getCenter().getAngleTo(this.target.getCenter());\r\n        this.current = image;\r\n        this.birdsInVision = [];\r\n        this.moveComponent = this.setMoveComponent(this.target.getLocation());\r\n        this.alive = true;\r\n        this.cooldown = 0;\r\n        this.range = 5;\r\n        this.angleChanged = false;\r\n    }\r\n    getCenter() { return new Vector(this.location.x + this.size, this.location.y + this.size)}\r\n    getMap() { return this.map; }\r\n    getHealth() { return this.health}\r\n    getArmor() { return this.armor; }\r\n    getLocation() { return this.location;}\r\n    getDamage() { return this.damage;}\r\n    getVision() { return this.vision}\r\n    getAttackSpeed() { return this.attackSpeed}\r\n    getMoveSpeed() { return this.moveSpeed;}\r\n    getSize() { return this.size}\r\n    getMaxHealth() { return this.maxHealth;}\r\n    getTarget() { return this.target; }\r\n    getImage() { return this.image;}\r\n    getMoney() { return this.money;}\r\n    getAngle() { return this.angle; }\r\n    draw(){ \r\n        if(this.angleChanged){\r\n            //rotateimage\r\n        }\r\n        //draw image\r\n    }\r\n    inVision(other) {\r\n        return this.getCenter().distanceFrom(other.getCenter()) - (this.size + other.getSize()) <= this.vision; \r\n    }\r\n    canAttack(other) {\r\n        return this.getCenter().distanceFrom(other.getCenter()) - (this.size + other.getSize()) <= this.range; \r\n    }\r\n\r\n    updateBirdsInVision(){\r\n        this.birdsInVision = this.map.birds.filter((bird) => {\r\n            return this.inVision(bird);\r\n        });\r\n    }\r\n\r\n    setMoveComponent(other){\r\n        \r\n        let distance = this.getCenter().distanceFrom(other);\r\n        let time = distance / this.moveSpeed;\r\n        let xDistance = other.x - this.location.x;\r\n        let yDistance = other.y - this.location.y;\r\n        this.moveComponent = new Vector(xDistance/time, yDistance/time);\r\n        \r\n    }\r\n\r\n    updateTarget(){\r\n        let prev = this.target;\r\n        this.updateBirdsInVision();\r\n\r\n\r\n        this.target = this.getMap().getNest();\r\n        \r\n        if(this.birdsInVision.length > 0){\r\n            let min = 1000000000000;\r\n            for(let i = 0; i < this.birdsInVision.length; i++){\r\n                let bird = this.birdsInVision[i];\r\n\r\n                let distance = bird.getLocation().distanceFrom(this.location) - (bird.getSize());\r\n                if(distance < min){\r\n                    this.target = bird;\r\n                    min = distance;\r\n                }\r\n            }\r\n        }\r\n        if(this.target !== prev){\r\n            this.angle = this.getCenter().getAngleTo(this.target.getCenter());\r\n            this.angleChanged = true;\r\n        }\r\n        this.setMoveComponent(this.target.getCenter());\r\n    }\r\n\r\n    exist(){\r\n        this.angleChanged = false;\r\n        this.cooldown--;\r\n        this.updateTarget();\r\n\r\n        if(this.canAttack(this.target)){\r\n            if(this.cooldown <= 0){\r\n                this.attack(this.target);\r\n                this.cooldown = this.attackSpeed;\r\n            }\r\n        }\r\n        else{\r\n            this.location.x += this.moveComponent.x;\r\n            this.location.y += this.moveComponent.y;\r\n        }\r\n        \r\n    }\r\n    isAlive() { return this.alive; }\r\n    takeDamage(damage){\r\n        this.health -= Math.max(damage - this.armor, 1);\r\n        if(this.health <= 0){\r\n            this.alive = false;\r\n            this.map.removeEnemy(this);\r\n            this.map.getPlayer().addMoney(this.money);\r\n        }\r\n    }\r\n    attack(en){\r\n\r\n        en.takeDamage(this.damage);\r\n        if(en.getHealth() <= 0){\r\n            this.updateTarget();\r\n        }\r\n    }\r\n}","import {Enemy} from \"./Enemy\";\r\nimport {Util} from \"../../utilities/Util\";\r\nexport class Bat extends Enemy {\r\n    static MAX_HEALTH = 100;\r\n    static ARMOR = 2;\r\n    static DAMAGE = 3;\r\n    static VISION = 275;\r\n    static ATTACK_SPEED = 1;\r\n    static MOVE_SPEED = 20;\r\n    static SIZE = 8;\r\n    static MONEY = 7;\r\n    static map = undefined;\r\n    constructor(map, location){\r\n        super(map, Bat.MAX_HEALTH, Bat.ARMOR, location, Bat.DAMAGE, Bat.VISION, Bat.ATTACK_SPEED, Bat.MOVE_SPEED, Bat.SIZE, Util.IMAGES.BAT, Bat.MONEY);\r\n    }\r\n    static setMap(map) { Bat.map = map;}\r\n    static build(location){\r\n        let bat = new Bat(Bat.map, location);\r\n        Bat.map.addEnemy(bat);\r\n        return bat;\r\n    }\r\n\r\n    draw(){\r\n        Util.draw(Util.IMAGES.BAT, this.getLocation().x, this.getLocation().y, this.getAngle());\r\n    }\r\n    toString() { return \"Bat at \" + this.location.toString(); }\r\n}","import {Enemy} from \"./Enemy\";\r\nimport {Util} from \"../../utilities/Util\";\r\nimport { Bat } from \"./Bat\";\r\nimport { Vector } from \"../../utilities/Vector\";\r\n\r\nexport class MassiveBat extends Enemy{\r\n    static MAX_HEALTH = 2500;\r\n    static ARMOR = 20;\r\n    static DAMAGE = 99;\r\n    static VISION = 250;\r\n    static ATTACK_SPEED = 250;\r\n    static MOVE_SPEED = 0.12;\r\n    static SIZE = 40;\r\n    static MONEY = 10;\r\n    static map = undefined;\r\n    constructor(map, location){\r\n        super(map, MassiveBat.MAX_HEALTH, MassiveBat.ARMOR, location, MassiveBat.DAMAGE, MassiveBat.VISION, MassiveBat.ATTACK_SPEED, MassiveBat.MOVE_SPEED, MassiveBat.SIZE, Util.IMAGES.BAT, MassiveBat.MONEY);\r\n        \r\n    }\r\n    static setMap(map) { this.map = map;}\r\n    static build(location){\r\n        let bat = new MassiveBat(MassiveBat.map, location);\r\n        MassiveBat.map.addEnemy(bat);\r\n        return bat;\r\n    }\r\n\r\n    takeDamage(damage){\r\n        super.takeDamage(damage);\r\n        if(this.getHealth() <= 0){\r\n            for(let i = 0; i < 15; i++){\r\n                Bat.build(new Vector(this.getCenter().x + (Math.floor(Math.random() * 41) + 20)), this.getCenter().y + Math.floor((Math.random() * 41) - 20));\r\n            }\r\n        }\r\n    }\r\n\r\n    draw(){\r\n        Util.draw(Util.IMAGES.BAT, this.location.x, this.location.y, this.getAngle(), 200, 100);\r\n    }\r\n\r\n    toString() { \r\n        return \"Massive Bat at \" + this.location.toString();\r\n    }\r\n}","import { Vector } from \"./Vector\";\r\n\r\nexport class Entity {\r\n    constructor(map, health, armor, location, size){\r\n        this.map = map;\r\n        this.location = location;\r\n        this.health = health;\r\n        this.armor = armor;\r\n        this.size = size;\r\n        this.alive = true;\r\n    }\r\n    getMap() { return this.map; }\r\n    getLocation() { return this.location; }\r\n    getHealth() { return this.health;}\r\n    getArmor() { return this.armor;}\r\n    getSize() { return this.size;}\r\n    isAlive() { return this.alive; }\r\n    getCenter() { \r\n        return new Vector(this.location.x + this.size, this.location.y + this.size); }\r\n    takeDamage(damage){\r\n        damage = Math.max(damage - this.armor, 1);\r\n        this.health -= damage;\r\n        if(this.health <= 0){\r\n            this.map.removeBird(this);\r\n            this.alive = false;\r\n        }\r\n    }\r\n}","import { Entity } from \"../../utilities/Entity\";\r\n\r\nexport class Bird extends Entity{\r\n    constructor(map, health, armor, location, size, damage, range, attackSpeed, image){\r\n        super(map, health, armor, location, size);\r\n        this.damage = damage;\r\n        this.range = range;\r\n        this.attackSpeed = attackSpeed * 10;\r\n        this.image = image;\r\n        this.maxHealth = health;\r\n        this.current = image;\r\n        this.angleChanged = false;\r\n        this.enemiesInRange = [];\r\n        this.angle = 90;\r\n        this.target = undefined;\r\n        this.cooldown = 0;\r\n    }\r\n    getLocation() { return this.location; }\r\n    getMap() { return this.map; }\r\n    getDamage() { return this.damage;}\r\n    getRange() { return this.range; }\r\n    getAttackSpeed() { return this.attackSpeed; }\r\n    getImage() { return this.image;}\r\n    getMaxHealth() { return this.maxHealth; }\r\n    getCurrentImage() { return this.current;}\r\n    getAngleChanged() { return this.angleChanged; }\r\n    getEnemiesInRange() { return this.enemiesInRange;}\r\n    getAngle() { return this.angle; }\r\n    getTarget() { return this.target; }\r\n    getCooldown() { return this.cooldown; }\r\n    \r\n\r\n    draw(){\r\n        if(this.angleChanged){\r\n            //rotate image and set it to current\r\n        }\r\n        //draw image\r\n\r\n        //draw healthbar\r\n    }\r\n    attack(enemy){\r\n        enemy.takeDamage(this.damage);\r\n        if(!enemy.alive){\r\n            this.target = undefined;\r\n        }\r\n    }\r\n    updateEnemiesInRange(){\r\n        this.enemiesInRange = this.map.enemies.filter((enemy) =>{\r\n            return this.inRange(enemy);\r\n        });\r\n    }\r\n    inRange(en){ return this.getCenter().distanceFrom(en.getCenter()) - (this.getSize() + en.getSize()) <= this.range; }\r\n    updateTarget(){\r\n        let prev = this.target;\r\n        if(this.target !== undefined && this.target.getHealth() <= 0)\r\n        {\r\n            this.target = undefined;\r\n        }\r\n        this.updateEnemiesInRange();\r\n        if(this.inRange.length < 1){\r\n            this.target = undefined;\r\n            return;\r\n        }\r\n        let closest = Infinity;\r\n        for(let i = 0; i < this.enemiesInRange.length; i++){\r\n            let enemy = this.enemiesInRange[i];\r\n            let distance = enemy.getLocation().distanceFrom(this.getLocation());\r\n            if(distance < closest){\r\n                closest = distance;\r\n                this.target = enemy;\r\n            }\r\n        }\r\n\r\n        if(this.target !== undefined && prev !== this.target){\r\n            this.angleChanged = true;\r\n            this.angle = this.getCenter().getAngleTo(this.target.getCenter());\r\n        }\r\n    }\r\n    exist(){\r\n        this.angleChanged = false;\r\n        this.updateTarget();\r\n\r\n        if(this.cooldown <= 0){\r\n            if(this.target !== undefined){\r\n                this.attack(this.target);\r\n                this.cooldown = this.attackSpeed;\r\n            }\r\n        }\r\n        else {\r\n            this.cooldown--;\r\n        }\r\n    }\r\n}","import { Util } from \"../../utilities/Util\";\r\nimport { Vector } from \"../../utilities/Vector\";\r\n\r\nexport class Projectile{\r\n    constructor(map, location, stepVector, damage, radius, image){\r\n        this.map = map;\r\n        this.location = location;\r\n        this.stepVector = stepVector;\r\n        this.damage = damage;\r\n        this.radius = radius;\r\n        this.image = image; \r\n        this.shouldRemove = false;\r\n    }\r\n    draw(){\r\n        //draw image\r\n    }\r\n    getMap() { return this.map; }\r\n    getLocation() { return this.location;}\r\n    getStepVector() { return this.stepVector;}\r\n    getDamage() { return this.damage;}\r\n    getRadius() { return this.radius; }\r\n    getImage() { return this.image; }\r\n    getCenter() { return new Vector(this.location.x + this.radius, this.location.y + this.radius)}\r\n    inContact(en){\r\n        return en.getCenter().distanceFrom(this.getCenter()) - (en.getSize() + this.radius) <= this.radius/2;\r\n    }\r\n\r\n    exist(){\r\n        let enemiesInContact = this.map.enemies.filter((enemy) => {\r\n            return this.inContact(enemy);\r\n        });\r\n        if(enemiesInContact.length === 0){\r\n            this.location.x += this.stepVector.x;\r\n            this.location.y += this.stepVector.y;\r\n            if(!Util.withinBoundsCoords(this.location, Util.TOP_LEFT, Util.BOTTOM_RIGHT)){\r\n                this.map.removeProjectile(this);\r\n            }\r\n        }\r\n        else{\r\n            enemiesInContact.forEach((enemy) => {\r\n                enemy.takeDamage(this.damage);\r\n            });\r\n            this.map.removeProjectile(this);\r\n        }\r\n    }\r\n}","import { Util } from \"../../utilities/Util\";\r\nimport {Projectile} from \"./Projectile\";\r\n\r\nexport class Egg extends Projectile{\r\n    constructor(map, location, stepVector){\r\n        super(map, location, stepVector, 66, 18, Util.EGG);\r\n        this.counter = 0;\r\n    }\r\n\r\n    draw(){\r\n        this.counter += 10;\r\n        Util.draw(Util.IMAGES.EGG, this.getLocation().x, this.getLocation().y, this.counter);\r\n    }\r\n}","import {Bird} from \"./Bird\";\r\nimport {Util} from \"../../utilities/Util\";\r\nimport { Egg } from \"../projectiles/Egg\";\r\nimport { Vector } from \"../../utilities/Vector\";\r\n\r\nexport class Chicken extends Bird{\r\n    static RANGE = 275;\r\n    static MAX_HEALTH = 100;\r\n    static ARMOR = 2;\r\n    static SIZE = 42;\r\n    static DAMAGE = 33;\r\n    static ATTACK_SPEED = 2;\r\n    static map = undefined;\r\n    constructor(map, location){\r\n        super(map, Chicken.MAX_HEALTH, Chicken.ARMOR, location, Chicken.SIZE, Chicken.DAMAGE, Chicken.RANGE, Chicken.ATTACK_SPEED, Util.CHICKEN);\r\n    }\r\n\r\n    attack(en){\r\n        let distance = this.getCenter().distanceFrom(en.getCenter());\r\n        let time = distance / 5;\r\n        let xDistance = en.getCenter().x - this.getCenter().x;\r\n        let yDistance = en.getCenter().y - this.getCenter().y;\r\n        \r\n        this.map.addProjectile(new Egg(this.map, this.getCenter().copy(), new Vector(xDistance/time, yDistance/time)));\r\n    }\r\n    static setMap(map) { this.map = map;};\r\n    static build(location){\r\n        let chicken = new Chicken(this.map, location);\r\n        this.map.addBird(chicken);\r\n        return chicken;\r\n        \r\n    }\r\n    draw(){\r\n        Util.draw(Util.IMAGES.CHICKEN, this.getLocation().x, this.getLocation().y, this.getAngle(), 85, 85);\r\n\r\n        Util.fillRect(this.getLocation().x + 5, this.getLocation().y - 10, 95, 10, Util.RED);\r\n        Util.fillRect(this.getLocation().x + 5, this.getLocation().y - 10, 95 * this.getHealth()/Chicken.MAX_HEALTH, 10, Util.GREEN);\r\n        Util.strokeRect(this.getLocation().x + 5, this.getLocation().y - 10, 95, 10, Util.BLACK);\r\n    }\r\n}","import { Util } from \"../../utilities/Util\";\r\nimport {Projectile} from \"./Projectile\";\r\n\r\nexport class Rock extends Projectile {\r\n    constructor(map, location, stepVector){\r\n        super(map, location, stepVector, 132, 20, Util.IMAGES.ROCK);\r\n        this.counter = 0;\r\n    }\r\n\r\n    draw(){\r\n        this.counter += 10;\r\n        Util.draw(Util.IMAGES.ROCK, this.getLocation().x, this.getLocation().y, this.counter/10.0);\r\n    }\r\n}\r\n","import {Bird} from \"./Bird\";\r\nimport {Rock} from \"../projectiles/Rock\";\r\nimport { Vector } from \"../../utilities/Vector\";\r\nimport { Util } from \"../../utilities/Util\";\r\n\r\nexport class Crow extends Bird{\r\n    static MAX_HEALTH = 150;\r\n    static ARMOR = 5;\r\n    static SIZE = 15;\r\n    static DAMAGE = 66;\r\n    static RANGE = 150;\r\n    static ATTACK_SPEED = 2;\r\n    static map = undefined;\r\n    constructor(map, location){\r\n        super(map, Crow.MAX_HEALTH, Crow.ARMOR, location, Crow.SIZE, Crow.DAMAGE, Crow.RANGE, Crow.ATTACK_SPEED, Util.IMAGES.CROW);\r\n    }\r\n    attack(en){\r\n        let distance = this.getCenter().distanceFrom(en.getCenter());\r\n        let time = distance / 17;\r\n        let xDistance = en.getCenter().x - this.getCenter().x;\r\n        let yDistance = en.getCenter().y - this.getCenter().y;\r\n\r\n        this.getMap().addProjectile(new Rock(this.getMap(), this.getCenter().copy(), new Vector(xDistance/time, yDistance/time)));\r\n        \r\n    }\r\n    static setMap(map) { this.map = map;}\r\n    static build(location){\r\n        let crow = new Crow(this.map, location);\r\n        this.map.addBird(crow);\r\n        return crow;\r\n    }\r\n\r\n    draw(){\r\n        Util.draw(Util.IMAGES.CROW, this.getLocation().x, this.getLocation().y, this.getAngle(), 85, 85);\r\n\r\n        Util.fillRect(this.getLocation().x + 5, this.getLocation().y - 10, 95, 10, Util.RED);\r\n        Util.fillRect(this.getLocation().x + 5, this.getLocation().y - 10, 95 * this.getHealth()/Crow.MAX_HEALTH, 10, Util.GREEN);\r\n        Util.strokeRect(this.getLocation().x + 5, this.getLocation().y - 10, 95, 10, Util.BLACK);\r\n    }\r\n}","import {Projectile} from \"./Projectile\";\r\nimport {Util} from \"../../utilities/Util\";\r\n\r\nexport class MassiveEgg extends Projectile{\r\n    constructor(map, location, stepVector){\r\n        super(map, location, stepVector, 250, 30, Util.IMAGES.EGG);\r\n        this.counter = 0;\r\n    }\r\n\r\n    draw(){\r\n        this.counter+= 20;\r\n        Util.draw(Util.IMAGES.EGG, this.location.x, this.location.y, this.counter * 0.3, 104, 104);\r\n    }\r\n    exist(){\r\n        let enemiesInContact = this.map.enemies.filter((enemy) => {\r\n            return this.inContact(enemy);\r\n        });\r\n        if(enemiesInContact.length === 0){\r\n            this.location.x += this.stepVector.x;\r\n            this.location.y += this.stepVector.y;\r\n            if(!Util.withinBoundsCoords(this.location, Util.TOP_LEFT, Util.BOTTOM_RIGHT)){\r\n                this.map.removeProjectile(this);\r\n            }\r\n        }\r\n        else{\r\n            enemiesInContact.forEach((enemy) => {\r\n                enemy.takeDamage(this.damage);\r\n            });\r\n        }\r\n    }\r\n}","import {Util} from \"../../utilities/Util\";\r\nimport {Vector} from \"../../utilities/Vector\";\r\nimport {MassiveEgg} from \"../projectiles/MassiveEgg\";\r\nimport {Bird} from \"./Bird\";\r\n\r\nexport class MassiveChicken extends Bird {\r\n    static MAX_HEALTH = 2500;\r\n    static ARMOR = 5;\r\n    static SIZE = 60;\r\n    static DAMAGE = 200;\r\n    static RANGE = 400;\r\n    static ATTACK_SPEED = 5;\r\n    static map = undefined;\r\n    constructor(map, location){\r\n        super(map, MassiveChicken.MAX_HEALTH, MassiveChicken.ARMOR, location, MassiveChicken.SIZE, MassiveChicken.DAMAGE, MassiveChicken.RANGE, MassiveChicken.ATTACK_SPEED, Util.IMAGES.CHICKEN);\r\n    }\r\n    static setMap(map){\r\n        this.map = map;\r\n    }\r\n    static build(location){\r\n        let chicken = new MassiveChicken(this.map, location);\r\n        this.map.addBird(chicken);\r\n        return chicken;\r\n        \r\n    }\r\n\r\n    attack(en){\r\n        let distance = this.getCenter().distanceFrom(en.getCenter());\r\n        let time = distance / 5;\r\n        let xDistance = en.getCenter().x - this.getCenter().x;\r\n        let yDistance = en.getCenter().y - this.getCenter().y;\r\n\r\n        this.getMap().addProjectile(new MassiveEgg(this.getMap(), this.getCenter().copy(), new Vector(xDistance/time, yDistance/time)));\r\n    }\r\n\r\n    draw(){\r\n        Util.draw(Util.IMAGES.CHICKEN, this.getLocation().x, this.getLocation().y, this.getAngle(), 204, 204);\r\n\r\n        Util.fillRect(this.getLocation().x + 5, this.getLocation().y - 10, 214, 10, Util.RED);\r\n        Util.fillRect(this.getLocation().x + 5, this.getLocation().y - 10, 214 * this.getHealth()/MassiveChicken.MAX_HEALTH, 10, Util.GREEN);\r\n        Util.strokeRect(this.getLocation().x + 5, this.getLocation().y - 10, 214, 10, Util.BLACK);\r\n    }\r\n}","import { Util } from \"../../utilities/Util\";\r\nimport {Bird} from \"./Bird\";\r\n\r\nexport class Woodpecker extends Bird{\r\n    static MAX_HEALTH = 500;\r\n    static ARMOR = 7;\r\n    static SIZE = 13;\r\n    static DAMAGE = 35;\r\n    static RANGE = 25;\r\n    static ATTACK_SPEED = 1;\r\n    static map = undefined;\r\n    constructor(map, location){\r\n        super(map, Woodpecker.MAX_HEALTH, Woodpecker.ARMOR, location, Woodpecker.SIZE, Woodpecker.DAMAGE, Woodpecker.RANGE, Woodpecker.ATTACK_SPEED, Util.IMAGES.Woodpecker);\r\n        this.counter = 0;\r\n    }\r\n    static setMap(map) { this.map = map;}\r\n    static build(location){\r\n        let woodpecker = new Woodpecker(Woodpecker.map, location);\r\n        Woodpecker.map.addBird(woodpecker);\r\n        return woodpecker;\r\n        \r\n    }\r\n    attack(en){\r\n        en.takeDamage(this.damage);\r\n    }\r\n\r\n    draw(){\r\n        Util.draw(Util.IMAGES.WOODPECKER, this.getLocation().x, this.getLocation().y, this.getAngle(), 85, 85);\r\n        Util.fillRect(this.getLocation().x + 5, this.getLocation().y - 10, 95, 10, Util.RED);\r\n        Util.fillRect(this.getLocation().x + 5, this.getLocation().y - 10, 95 * this.getHealth()/Woodpecker.MAX_HEALTH, 10, Util.GREEN);\r\n        Util.strokeRect(this.getLocation().x + 5, this.getLocation().y - 10, 95, 10, Util.BLACK);\r\n    }\r\n\r\n}","import {Entity} from \"../../utilities/Entity\";\r\nimport {Util} from \"../../utilities/Util\";\r\n\r\nexport class Nest extends Entity{\r\n    static MAX_HEALTH = 2500;\r\n    static ARMOR = 4;\r\n    static SIZE = 135;\r\n    constructor(map, location){\r\n        super(map, Nest.MAX_HEALTH, Nest.ARMOR, location, Nest.SIZE);\r\n    }\r\n\r\n    draw(){\r\n        let ctx = Util.ctx;\r\n        ctx.drawImage(Util.IMAGES.NEST, this.getLocation().x, this.getLocation().y);\r\n\r\n        Util.fillRect(this.getLocation().x - 5, this.getLocation().y + 15, this.getSize() * 2 + 10, 20, Util.RED);\r\n        Util.fillRect(this.getLocation().x -5, this.getLocation().y + 15, (this.getSize() * 2 + 10) * (this.getHealth()/2500.0), 20, Util.GREEN);\r\n        Util.strokeRect(this.getLocation().x -5, this.getLocation().y + 15, this.getSize() * 2 + 10, 20, Util.BLACK);\r\n\r\n    }\r\n    toString() { return \"Nest at \" + this.location.toString(); }\r\n    takeDamage(damage){\r\n        damage = Math.max(damage - this.armor, 1);\r\n        this.health -= damage;\r\n        if(this.health <= 0){\r\n            this.alive = false;\r\n        }\r\n    }\r\n}","import { Bat } from \"../components/enemies/Bat\";\r\nimport { MassiveBat } from \"../components/enemies/MassiveBat\";\r\n\r\nexport class Factory{\r\n    constructor(map, location, spawnRate, product){\r\n        this.map = map;\r\n        this.location = location;\r\n        this.spawnRate = spawnRate;\r\n        this.product = product;\r\n        this.cooldown = spawnRate;\r\n    }\r\n\r\n    getLocation() { return this.location;}\r\n    getMap() { return this.map; }\r\n    getProduct() { return this.product; }\r\n\r\n    exist(){\r\n        if(this.cooldown <= 0){\r\n            if(this.product === Bat){\r\n                Bat.build(this.location.copy());\r\n            }\r\n            else if(this.product === MassiveBat){\r\n                MassiveBat.build(this.location.copy());\r\n            }\r\n            this.cooldown = this.spawnRate;\r\n        }\r\n        else{\r\n            this.cooldown--;\r\n        }\r\n    }\r\n\r\n\r\n}","import {Factory} from \"../../utilities/Factory\";\r\nimport {MassiveBat} from \"../enemies/MassiveBat\";\r\nimport {Util} from \"../../utilities/Util\";\r\n\r\nexport class MassiveBatFactory extends Factory{\r\n    static map = undefined;\r\n    constructor(map, location){\r\n        super(map, location, 500, MassiveBat);\r\n    }\r\n    draw(){\r\n        Util.fillRect(this.getLocation().x, this.getLocation().y, 100, 100, Util.BLACK);\r\n    }\r\n    static setMap(map) { MassiveBatFactory.map = map;}\r\n    static build(location){\r\n        let factory = new MassiveBatFactory(MassiveBatFactory.map, location);\r\n        MassiveBatFactory.map.addFactory(factory);\r\n        return factory;\r\n    }\r\n}","import {Factory} from \"../../utilities/Factory\";\r\nimport {Bat} from \"../enemies/Bat\";\r\nimport {Util} from \"../../utilities/Util\";\r\n\r\nexport class BatFactory extends Factory {\r\n    static map = undefined;\r\n    constructor(map, location){\r\n        super(map, location, 150, Bat);\r\n    }\r\n    draw(){\r\n        Util.fillRect(this.getLocation().x, this.getLocation().y, 50, 50, Util.BLACK);\r\n    }\r\n    static setMap(map){\r\n        BatFactory.map = map;\r\n    }\r\n    static build(location){\r\n        let factory = new BatFactory(BatFactory.map, location);\r\n        this.map.addFactory(factory);\r\n        return factory;\r\n\r\n    }\r\n}","import {Util} from \"./Util\";\r\nimport {Chicken} from \"../components/towers/Chicken\";\r\nimport {MassiveChicken} from \"../components/towers/MassiveChicken\";\r\nimport {Crow} from \"../components/towers/Crow\";\r\nimport {Woodpecker} from \"../components/towers/Woodpecker\";\r\nimport { getIsHost, getIsRequest } from \"..\";\r\nimport { BatFactory } from \"../components/factories/BatFactory\";\r\nimport {MassiveBatFactory} from \"../components/factories/MassiveBatFactory\";\r\n\r\nexport const drawBirdPanel = (money, health) => {\r\n    let ctx = Util.ctx;\r\n    Util.fillRect(1000, 0, 400, 800, \"#964B00\");\r\n    Util.strokeRect(1020, 60, 360, 205, Util.BLACK);\r\n    Util.strokeRect(1050, 95, 125, 135, Util.BLACK);\r\n    Util.strokeRect(1225, 95, 125, 135, Util.BLACK);\r\n\r\n    Util.strokeRect(1020, 290, 360, 205, Util.BLACK);\r\n    Util.strokeRect(1050, 325, 125, 135, Util.BLACK);\r\n    Util.strokeRect(1225, 325, 125, 135, Util.BLACK);\r\n\r\n    Util.draw(Util.IMAGES.CHICKEN, 1050 + 25, 95 + 25, 90, 85, 85);\r\n    Util.draw(Util.IMAGES.CHICKEN, 1215, 95 + 10, 90, 154, 154);\r\n\r\n    Util.draw(Util.IMAGES.CROW, 1050 + 25, 325 + 25, 90, 85, 85);\r\n    Util.draw(Util.IMAGES.WOODPECKER, 1225 + 25, 325 + 25, 90, 85, 85);\r\n\r\n    ctx.font = '20px serif';\r\n    ctx.fillStyle = Util.BLACK;\r\n    ctx.fillText(\"$100\", 1050+40, 90);\r\n    ctx.fillText('$750', 1225+40, 90);\r\n\r\n    ctx.fillText(\"$200\", 1050+40, 320);\r\n    ctx.fillText('$50', 1225+45, 320);\r\n\r\n    ctx.fillText(\"$\" + money, 1015, 25);\r\n    ctx.fillText(\"Health: \" + health, 1015, 45);\r\n}\r\n\r\nexport const drawBatPanel = (money, health) => {\r\n    let ctx = Util.ctx;\r\n    Util.fillRect(1000, 0, 400, 800, \"#964B00\");\r\n    Util.strokeRect(1020, 60, 360, 205, Util.BLACK);\r\n    Util.strokeRect(1050, 95, 125, 135, Util.BLACK);\r\n    Util.strokeRect(1225, 95, 125, 135, Util.BLACK);\r\n\r\n    Util.fillRect(1050 + 42, 95 + 42, 50, 50, Util.BLACK);\r\n    Util.fillRect(1225 + 12, 95 + 12, 100, 100, Util.BLACK);\r\n\r\n    ctx.font = '20px serif';\r\n    ctx.fillStyle = Util.BLACK;\r\n    ctx.fillText(\"$300\", 1050+40, 90);\r\n    ctx.fillText('$1200', 1225+40, 90);\r\n\r\n    ctx.fillText(\"$\" + money, 1015, 25);\r\n    ctx.fillText(\"Health: \" + health, 1015, 45);\r\n}\r\n\r\nexport const drawMouseSelection = (selection, location) => {\r\n    if(selection === Chicken){\r\n        Util.draw(Util.IMAGES.CHICKEN, location.x, location.y, 90, 85, 85);\r\n        Util.strokeCircle(location.x + 42, location.y + 42, Chicken.RANGE, Util.BLACK);\r\n    }\r\n    else if(selection === MassiveChicken){\r\n        Util.draw(Util.IMAGES.CHICKEN, location.x, location.y, 90, 204, 204);\r\n        Util.strokeCircle(location.x + 102, location.y + 102, MassiveChicken.RANGE, Util.BLACK);\r\n    }\r\n    else if(selection === Crow){\r\n        Util.draw(Util.IMAGES.CROW, location.x, location.y, 90, 85, 85);\r\n        Util.strokeCircle(location.x + 42, location.y + 42, Crow.RANGE, Util.BLACK);\r\n    }\r\n    else if(selection === Woodpecker){\r\n        Util.draw(Util.IMAGES.WOODPECKER, location.x, location.y, 90, 85, 85);\r\n        Util.strokeCircle(location.x + 42, location.y + 42, Woodpecker.RANGE, Util.BLACK);\r\n    }\r\n    else if(selection === BatFactory){\r\n        Util.fillRect(location.x, location.y, 50, 50, Util.BLACK);\r\n    }\r\n    else if(selection === MassiveBatFactory){\r\n        Util.fillRect(location.x, location.y, 100, 100, Util.BLACK);\r\n    }\r\n    \r\n}\r\n\r\nexport const drawStartScreen = (canvas, roomCode, startText, name, clickName, clickRoom, hoverStart, hoverSinglePlayer) => {\r\n    let ctx = Util.ctx;\r\n    ctx.fillStyle = \"#87CEEB\";\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    var x = canvas.width/2 - 490;\r\n    var y = canvas.height/2 - 350;\r\n    ctx.drawImage(Util.IMAGES.TITLE, x, y);\r\n\r\n    ctx.fillStyle = Util.BLACK;\r\n    ctx.font = \"50px serif\";\r\n    let nameMeasure = ctx.measureText(\"Welcome, \" + name);\r\n    let roomMeasure = ctx.measureText(\"Enter room code: \" + roomCode);\r\n    let startMeasure = ctx.measureText(startText);\r\n    let singleMeasure = ctx.measureText(\"Single Player\");\r\n    ctx.fillText(startText, canvas.width/2 - startMeasure.width/2, canvas.height/2 + 90);\r\n    ctx.fillText(\"Enter room code: \" + roomCode, canvas.width/2 - roomMeasure.width/2, canvas.height/2 - 30);\r\n    ctx.fillText(\"Welcome, \" + name, canvas.width/2 - nameMeasure.width/2, canvas.height/2 - 150);\r\n    ctx.fillText(\"Single Player\", canvas.width/2 - singleMeasure.width/2, canvas.height/2 + 210);\r\n    \r\n    if(hoverStart){\r\n        Util.draw(Util.IMAGES.BAT, canvas.width/2 - startMeasure.width/2 - 50, canvas.height/2 + 50, 0);\r\n        Util.strokeRect(canvas.width/2 - startMeasure.width/2 - 25, canvas.height/2 + 50, startMeasure.width + 50, 50, Util.BLACK);\r\n    }\r\n    else if(hoverSinglePlayer){\r\n        Util.draw(Util.IMAGES.BAT, canvas.width/2 - startMeasure.width/2 - 133, canvas.height/2 + 170, 0);\r\n        Util.strokeRect(canvas.width/2 - singleMeasure.width/2 - 25, canvas.height/2 + 170, singleMeasure.width + 50, 50, Util.BLACK);\r\n    }\r\n    else if(clickName){\r\n        Util.strokeRect(canvas.width/2 - nameMeasure.width/2 - 50, canvas.height/2 - 190, nameMeasure.width + 100, 50, Util.BLACK);\r\n    }\r\n    else if(clickRoom){\r\n        Util.strokeRect(canvas.width/2 - roomMeasure.width/2 - 50, canvas.height/2 - 70, roomMeasure.width + 100, 50, Util.BLACK);\r\n    }\r\n}\r\n\r\nexport const drawWaitRoom = (roomCode, other, player, birdPlayer) => {\r\n    let ctx = Util.ctx;\r\n    ctx.fillText(roomCode, 700, 600);\r\n    ctx.fillText(player.name, 200, 200);\r\n    if(other !== undefined){\r\n        ctx.fillText(other.name, 1200, 200);\r\n        if(birdPlayer.name === other.name){\r\n            Util.draw(Util.IMAGES.CHICKEN, 1200, 100, 0, 50, 50);\r\n        }\r\n        else{\r\n            Util.draw(Util.IMAGES.BAT, 1200, 100, 0);\r\n        }\r\n    }\r\n\r\n    if(birdPlayer.name === player.name){\r\n        Util.draw(Util.IMAGES.CHICKEN, 200, 100, 0, 50, 50);\r\n\r\n    }\r\n    else{\r\n        Util.draw(Util.IMAGES.BAT, 200, 100, 0);\r\n    }\r\n\r\n    ctx.fillStyle = Util.BLACK;\r\n    if(getIsHost()){\r\n        if(getIsRequest())\r\n        {\r\n            ctx.fillStyle = Util.RED;\r\n        }\r\n        ctx.fillText(\"Change Sides\", 700, 500);\r\n        ctx.fillStyle = Util.BLACK;\r\n        let changeMeasure = ctx.measureText(\"Change Sides\");\r\n        Util.strokeRect(700 - 50, 500 - 50, changeMeasure.width + 100, 75, Util.BLACK);\r\n        ctx.fillText(\"Press any key to start\", 500, 100);\r\n    }\r\n    else{\r\n        ctx.fillText(\"Request Change Sides\", 700, 500);\r\n        let changeMeasure = ctx.measureText(\"Request Change Sides\");\r\n        Util.strokeRect(700 - 50, 500 - 50, changeMeasure.width + 100, 75, Util.BLACK);\r\n        ctx.fillText(\"Press any key to start\", 500, 100);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const drawEndScreen = (hoverEnd, counter, canvas) => {\r\n    let ctx = Util.ctx;\r\n    ctx.fillStyle = \"#fd5e53\";\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    ctx.fillStyle = Util.BLACK;\r\n    ctx.font = \"50px serif\";\r\n\r\n    let otherMeasure = ctx.measureText(\"Ok\");\r\n    ctx.fillText(\"Ok\", canvas.width/2  - otherMeasure.width/2, canvas.height/2 + 40);\r\n    \r\n\r\n    if(hoverEnd){\r\n        Util.draw(Util.IMAGES.BAT, canvas.width/2 - otherMeasure.width/2 - 50, canvas.height/2, 0);\r\n        Util.strokeRect(canvas.width/2 - otherMeasure.width/2 - 50, canvas.height/2 - 50, otherMeasure.width + 100, 150, Util.BLACK);\r\n    }\r\n    let miliseconds = counter * 30;\r\n    let seconds = miliseconds/1000;\r\n    let minutes = Math.floor(seconds/60);\r\n    seconds = seconds % 60;\r\n    ctx.fillText(\"Survival Time: \" + minutes + \":\" + seconds, 200, 200);\r\n    \r\n}","import {Map} from \"./utilities/Map\";\r\nimport { Vector } from \"./utilities/Vector\";\r\n\r\nimport {Util} from \"./utilities/Util\";\r\n\r\nimport { MassiveBat } from \"./components/enemies/MassiveBat\";\r\nimport { Bat} from \"./components/enemies/Bat\";\r\n\r\nimport {Chicken} from \"./components/towers/Chicken\";\r\nimport {Crow} from \"./components/towers/Crow\";\r\nimport {MassiveChicken} from \"./components/towers/MassiveChicken\";\r\nimport {Woodpecker} from \"./components/towers/Woodpecker\";\r\nimport { Nest } from \"./components/towers/Nest\";\r\n\r\nimport {MassiveBatFactory} from \"./components/factories/MassiveBatFactory\";\r\nimport { BatFactory } from \"./components/factories/BatFactory\";\r\nimport { Player } from \"./utilities/Player\";\r\nimport {drawBirdPanel, drawMouseSelection, drawStartScreen, drawWaitRoom, drawEndScreen, drawBatPanel} from \"./utilities/Draw\";\r\nimport {handleSyncResponse, handleMouseMove0, handleMouseMove3, handleMouseDown2, handleMouseUp0, handleMouseUp2, handleMouseUp3, handleMouseUp1} from \"./utilities/handlers\";\r\n\r\nvar canvas, ctx, map, player, nest;\r\nvar location = new Vector(0, 0);\r\nvar pressed = false;\r\nlet selection = undefined;\r\nvar screenNum= 0;\r\nvar hoverStart = false;\r\nvar hoverEnd = false;\r\nvar clickName = false;\r\nvar clickRoom = false;\r\nvar name = \"Guest\";\r\nvar startText = \"Start\";\r\nvar roomCode = \"\";\r\nvar other = undefined;\r\nvar hoverSinglePlayer = false;\r\nvar isHost = false;\r\nvar birdPlayer, batPlayer;\r\nvar isRequesting = false;\r\nvar clickChangeSides = false;\r\nvar clickRequestChangeSides = false;\r\n\r\nfunction init(){\r\n\r\n    canvas = document.getElementById(\"myCanvas\");\r\n    ctx = canvas.getContext(\"2d\");\r\n    map = new Map();\r\n    nest = new Nest(map, new Vector(350, 250));\r\n    player = new Player(-1);\r\n    birdPlayer = player;\r\n    map.nest = nest;\r\n    Util.setContext(ctx);\r\n    Util.loadImages();\r\n    ctx.font = \"50px serif\";\r\n    Util.getGameId();\r\n\r\n    setUpHandlers(canvas);\r\n\r\n    Bat.setMap(map);\r\n    MassiveBat.setMap(map);\r\n    Chicken.setMap(map);\r\n    Crow.setMap(map);\r\n    MassiveChicken.setMap(map);\r\n    Woodpecker.setMap(map);\r\n    BatFactory.setMap(map);\r\n    MassiveBatFactory.setMap(map);\r\n}\r\n\r\n\r\nlet counter = 0;\r\nfunction game() {\r\n    Util.strokeRect(0, 0, canvas.width - 400, canvas.height, Util.BLACK);\r\n    Util.fillRect(0, 0, canvas.width - 400, canvas.height, \"#87CEEB\");\r\n    Util.strokeRect(0, 0, canvas.width, canvas.height, Util.BLACK);\r\n    Util.sync(handleSyncResponse);\r\n\r\n    if(hoverSinglePlayer){\r\n        //spawnBats\r\n        if(counter % 100 === 0)\r\n            spawnBat();\r\n    }\r\n\r\n    map.nest.draw();\r\n\r\n    for(let i = 0; i < map.projectiles.length; i++){\r\n        try{\r\n            map.projectiles[i].exist();\r\n            map.projectiles[i].draw();\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    for(let i = 0; i < map.birds.length; i++){\r\n        map.birds[i].exist();\r\n        map.birds[i].draw();\r\n    }\r\n    for(let i = 0; i < map.enemies.length; i++){\r\n        map.enemies[i].exist();\r\n        map.enemies[i].draw();\r\n    }\r\n\r\n    for(let i = 0; i < map.factories.length; i++){\r\n        map.factories[i].exist();\r\n        map.factories[i].draw();\r\n    }\r\n    if(birdPlayer.id === Util.USER_ID){\r\n        drawBirdPanel(player.getMoney(), nest.getHealth());\r\n    }\r\n    else{\r\n        drawBatPanel(player.getMoney(), nest.getHealth());\r\n    }\r\n    if(pressed && selection !== undefined)\r\n        drawMouseSelection(selection, location);\r\n    if(!nest.alive)\r\n        screenNum++;\r\n    counter++;\r\n}\r\n\r\nfunction frame(){\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    Util.strokeRect(0, 0, canvas.width, canvas.height, Util.BLACK);\r\n    if(screenNum=== 0)\r\n        drawStartScreen(canvas, roomCode, startText, name, clickName, clickRoom, hoverStart, hoverSinglePlayer);\r\n    else if(screenNum=== 1)\r\n        waitRoom();\r\n    else if(screenNum=== 2)\r\n        game();\r\n    else if(screenNum=== 3)\r\n        drawEndScreen(hoverEnd, counter, canvas);\r\n}\r\n\r\nfunction waitRoom(){\r\n    Util.syncRoom(roomCode, new Player(Util.USER_ID, name));\r\n    drawWaitRoom(roomCode, other, player, birdPlayer);\r\n}\r\n\r\nfunction spawnBat(){\r\n    let side = Util.random(0, 4);\r\n    var x, y;\r\n    if(side === 0){ //top\r\n        x = Util.random(0, 1000);\r\n        y = 0;\r\n    }\r\n    else if(side === 1){ //left\r\n        x = 0;\r\n        y = Util.random(0, 800);\r\n    }\r\n    else if(side === 2){ //bottom\r\n        x = Util.random(0, 1000);\r\n        y = 800;\r\n    }\r\n    else if(side === 3){ //right\r\n        x = 1000;\r\n        y = Util.random(0, 800);\r\n    }\r\n    Bat.build(new Vector(x, y));\r\n}\r\n\r\nfunction reset(){\r\n    map.clear();\r\n    nest.health = 2500;\r\n    player.money = 300;\r\n    nest.alive = true;\r\n    counter = 0;\r\n}\r\nwindow.onload = () => {\r\n    init();\r\n    setInterval(frame, 30);\r\n}\r\n\r\nfunction setUpHandlers(canvas){\r\n    document.addEventListener(\"pointermove\", (e) =>{\r\n        let relativeX = e.clientX - canvas.offsetLeft;\r\n        let relativeY = e.clientY - canvas.offsetTop;\r\n        location = new Vector(relativeX, relativeY);\r\n        if(screenNum=== 0){\r\n            let out = handleMouseMove0(startText, canvas, location);\r\n            hoverStart = out.hoverStart;\r\n            hoverSinglePlayer = out.hoverSinglePlayer;\r\n\r\n            if(hoverStart || hoverSinglePlayer){\r\n                clickRoom = false;\r\n                clickName = false;\r\n            }\r\n        }\r\n        else if(screenNum=== 3){\r\n            hoverEnd = handleMouseMove3(canvas, location);\r\n\r\n        }\r\n\r\n    });\r\n    canvas.addEventListener(\"pointerdown\", (e) => {\r\n        console.log(\"mouse down\");\r\n        if(screenNum=== 1){\r\n            handleMouseUp1(location, roomCode);\r\n        }\r\n        else if(screenNum=== 2){\r\n            let out = handleMouseDown2(e, location);\r\n            selection = out.selection;\r\n            pressed = out.pressed;\r\n        }\r\n    });\r\n    document.addEventListener(\"pointerup\", (e) => {\r\n        console.log(\"mouse up\");\r\n        if(screenNum=== 0){\r\n            if(e.button === 0)\r\n            {\r\n                let out = handleMouseUp0(location, hoverStart, roomCode, name, canvas, hoverSinglePlayer);\r\n                clickName = out.clickName;\r\n                clickRoom = out.clickRoom;\r\n                screenNum= out.screen;\r\n            }\r\n\r\n        }\r\n        else if(screenNum=== 2){\r\n            handleMouseUp2(e, location, player, selection, counter);\r\n            selection = undefined;\r\n        }\r\n        else if(screenNum=== 3){\r\n            handleMouseUp3(e, hoverEnd, reset);\r\n        }\r\n\r\n    });\r\n\r\n    document.addEventListener(\"keydown\", (e) => {\r\n        if(screenNum=== 0)\r\n        {\r\n            if(!(clickName || clickRoom))\r\n                return;\r\n            if(clickName){\r\n                if(e.key.length === 1)\r\n                    name += e.key;\r\n                else if(e.key === \"Backspace\")\r\n                    name = name.substring(0, name.length - 1);\r\n            }\r\n            else if(clickRoom){\r\n                if(e.key.length === 1)\r\n                    roomCode += e.key;\r\n                else if(e.key === \"Backspace\")\r\n                    roomCode = roomCode.substring(0, roomCode.length - 1);\r\n                if(roomCode !== \"\"){\r\n                    startText = \"Enter Room\";\r\n                }\r\n                else{\r\n                    startText = \"Start\";\r\n                }\r\n            }\r\n        }\r\n        else if(screenNum=== 1){\r\n            Util.syncRoom(roomCode, new Player(Util.USER_ID, name), true);\r\n        }\r\n\r\n    });\r\n}\r\n\r\nexport const setRoomCode = (code) => {roomCode = code;};\r\nexport const setHost = (host) => {isHost = host;}\r\nexport const getIsHost = () => { return isHost; }\r\nexport const setScreenNum = (num) => {screenNum= num;};\r\nexport const setOtherPlayer = (temp) => { other = temp;}\r\nexport const setName = (other) => { player.name = other; name=other;}\r\nexport const setBirdPlayer = (player) => {birdPlayer = player; }\r\nexport const setBatPlayer = (player) => {batPlayer = player; }\r\nexport const getOtherPlayer = () => { return other; }\r\nexport const swapSides = () => {\r\n    let temp = birdPlayer;\r\n    birdPlayer = batPlayer;\r\n    batPlayer = temp;\r\n}\r\nexport const getMapInstance = () => { return map; }\r\nexport const getBatPlayer = () => { return batPlayer; }\r\nexport const getBirdPlayer = () => { return birdPlayer; }\r\nexport const setIsRequest = (request) => { isRequesting = request;}\r\nexport const getIsRequest = () => { return isRequesting; }\r\nexport const getClickChangeSides = () => { return clickChangeSides; }\r\nexport const getClickRequestChangeSides = () => { return clickRequestChangeSides; }\r\n","import {Chicken} from \"../components/towers/Chicken\";\r\nimport {MassiveChicken} from \"../components/towers/MassiveChicken\";\r\nimport {Crow} from \"../components/towers/Crow\";\r\nimport {Woodpecker} from \"../components/towers/Woodpecker\";\r\nimport {Vector} from \"./Vector\";\r\nimport {BatFactory} from \"../components/factories/BatFactory\";\r\nimport {MassiveBatFactory} from \"../components/factories/MassiveBatFactory\";\r\nimport {Util} from \"./Util\";\r\nimport {Player} from \"./Player\";\r\nimport { getBirdPlayer, getIsHost} from \"..\";\r\n\r\n\r\nexport const handleSyncResponse = (response) => {\r\n    for(let i = 0; i < response.length; i++){\r\n        let obj = response[i];\r\n        if(obj.type === \"chicken\"){\r\n            Chicken.build(new Vector(obj.x, obj.y));\r\n        }\r\n        else if(obj.type === \"massivechicken\"){\r\n            MassiveChicken.build(new Vector(obj.x, obj.y));\r\n        }\r\n        else if(obj.type === \"crow\"){\r\n            Crow.build(new Vector(obj.x, obj.y));\r\n        }\r\n        else if(obj.type === \"woodpecker\"){\r\n            Woodpecker.build(new Vector(obj.x, obj.y));\r\n        }\r\n        else if(obj.type === \"batfactory\"){\r\n            BatFactory.build(new Vector(obj.x, obj.y));\r\n        }\r\n        else if(obj.type === \"massivebatfactory\"){\r\n            MassiveBatFactory.build(new Vector(obj.x, obj.y));\r\n        }\r\n        else{\r\n            console.log(\"Invalid type: \" + obj.type);\r\n        }\r\n    }\r\n}\r\n\r\nexport const handleMouseMove0 = (startText, canvas, location) => {\r\n    let ctx = Util.ctx;\r\n    let startMeasure = ctx.measureText(startText);\r\n    var topLeft = new Vector(canvas.width/2 - startMeasure.width/2 - 25, canvas.height/2 + 50);\r\n    var bottomRight = new Vector(topLeft.x + startMeasure.width + 50, topLeft.y + 50);\r\n    let hoverStart = Util.withinBoundsCoords(location, topLeft, bottomRight);\r\n\r\n    let singleMeasure = ctx.measureText(\"Single Player\");\r\n    topLeft = new Vector(canvas.width/2 - singleMeasure.width/2 - 25, canvas.height/2 + 170);\r\n    bottomRight = new Vector(topLeft.x + startMeasure.width + 50, topLeft.y + 50);\r\n    let hoverSinglePlayer = Util.withinBoundsCoords(location, topLeft, bottomRight);\r\n    return {hoverStart: hoverStart, hoverSinglePlayer: hoverSinglePlayer};\r\n}\r\n\r\nexport const handleMouseMove3 = (canvas, location) => {\r\n    let ctx = Util.ctx;\r\n    let endMeasure = ctx.measureText(\"Ok\");\r\n\r\n    var topLeft = new Vector(canvas.width/2 - endMeasure.width/2 - 50, canvas.height/2 - 50);\r\n    var bottomRight = new Vector(topLeft.x + endMeasure.width + 100, topLeft.y + 150);\r\n    var hoverEnd = Util.withinBoundsCoords(location, topLeft, bottomRight);\r\n    return hoverEnd;\r\n}\r\n\r\nexport const handleMouseDown2 = (e, location) => {\r\n    let isBird = getBirdPlayer().id === Util.USER_ID;\r\n    if(e.button !== 0)\r\n        return {selection: undefined, pressed: false};\r\n\r\n    if(Util.withinBoundsCoords(location, new Vector(1050, 95), new Vector(1175, 230))){\r\n        if(isBird)\r\n            return {selection: Chicken, pressed: true};\r\n        return {selection: BatFactory, pressed: true};\r\n    }\r\n    else if(Util.withinBoundsCoords(location, new Vector(1225, 95), new Vector(1350, 230))){\r\n        if(isBird)\r\n            return {selection: MassiveChicken, pressed: true};\r\n        return {selection: MassiveBatFactory, pressed: true};\r\n    }\r\n    else if(Util.withinBoundsCoords(location, new Vector(1050, 325), new Vector(1175, 460))){\r\n        if(isBird)\r\n            return {selection: Crow, pressed: true};\r\n        return {selection: undefined, pressed: false};\r\n    }\r\n    else if(Util.withinBoundsCoords(location, new Vector(1225, 325), new Vector(1350, 460))){\r\n        if(isBird)\r\n            return {selection: Woodpecker, pressed: true};\r\n        return {selection: undefined, pressed: false};\r\n    }\r\n\r\n    return {selection: undefined, pressed: false};\r\n\r\n}\r\n\r\nexport const handleMouseUp0 = (location, hoverStart, roomCode, name, canvas, hoverSinglePlayer) => {\r\n    let screen = 0;\r\n    let ctx = Util.ctx;\r\n    let clickName = false;\r\n    let clickRoom = false;\r\n    if(hoverStart){\r\n        if(roomCode === \"\"){\r\n            roomCode = Util.createGameRoom(new Player(Util.USER_ID, name));\r\n            console.log(\"room code: \" + roomCode);\r\n        }\r\n        else{\r\n            Util.joinGameRoom(roomCode, new Player(Util.USER_ID, name));\r\n        }\r\n        //next screen\r\n        screen++;\r\n    }\r\n\r\n    else if(hoverSinglePlayer){\r\n        screen+=2;\r\n    }\r\n\r\n    let nameMeasure = ctx.measureText(name);\r\n    let topLeft = new Vector(canvas.width/2 - nameMeasure.width/2 - 50, canvas.height/2 - 190);\r\n    let bottomRight = new Vector(topLeft.x + nameMeasure.width + 100, topLeft.y + 50);\r\n\r\n    if(Util.withinBoundsCoords(location, topLeft, bottomRight)){\r\n        clickName = true;\r\n        clickRoom = false;\r\n        hoverStart = false;\r\n        hoverSinglePlayer = false;\r\n    }\r\n    let roomMeasure = ctx.measureText(\"Enter room code: \" + roomCode);\r\n    topLeft = new Vector(canvas.width/2 - roomMeasure.width/2 - 50, canvas.height/2 - 70);\r\n    bottomRight = new Vector(topLeft.x + roomMeasure.width + 100, topLeft.y + 50);\r\n    \r\n    if (Util.withinBoundsCoords(location, topLeft, bottomRight)){\r\n        clickRoom = true;\r\n        hoverStart = false;\r\n        clickName = false;\r\n        hoverSinglePlayer = false;\r\n    }\r\n    return {clickName: clickName, clickRoom: clickRoom, screen: screen};\r\n    \r\n}\r\n\r\nexport const handleMouseUp1 = (location, roomCode) => {\r\n    console.log(\"HERE\");\r\n    let ctx = Util.ctx;\r\n    let text = \"\";\r\n    if(getIsHost()){\r\n        text = \"Change Sides\";\r\n    }\r\n    else{\r\n        text = \"Request Change Sides\";\r\n    }\r\n    let changeMeasure = ctx.measureText(text);\r\n    let topLeft = new Vector(700 - 50, 500 - 50);\r\n    let bottomRight = new Vector(700 + changeMeasure.width + 50, 500 + 25);\r\n    if(Util.withinBoundsCoords(location, topLeft, bottomRight)){\r\n        Util.changeSide(roomCode, getIsHost());\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const handleMouseUp2 = (e, location, player, selection, counter) => {\r\n\r\n    if(e.button !== 0){\r\n        return;\r\n    }\r\n\r\n    if(location.x > 1000)\r\n    {\r\n        selection = undefined;\r\n        return;\r\n    }\r\n    if(selection === Chicken){\r\n        if(player.getMoney() < 100){\r\n            selection = undefined;\r\n            return;\r\n        }\r\n        player.removeMoney(100);\r\n        Chicken.build(location);\r\n        Util.place(\"chicken\", location, counter);\r\n    }\r\n    else if(selection === MassiveChicken){\r\n        if(player.getMoney() < 750){\r\n            selection = undefined;\r\n            return;\r\n        }\r\n        player.removeMoney(750);\r\n        MassiveChicken.build(location);\r\n        Util.place(\"massivechicken\");\r\n    }\r\n    else if(selection === Woodpecker){\r\n        if(player.getMoney() < 50){\r\n            selection = undefined;\r\n            return;\r\n        }\r\n        player.removeMoney(50);\r\n        Woodpecker.build(location);\r\n        Util.place(\"woodpecker\", location, counter);\r\n    }\r\n    else if(selection === Crow){\r\n        if(player.getMoney() < 200){\r\n            selection = undefined;\r\n            return;\r\n        }\r\n        player.removeMoney(200);\r\n        Crow.build(location);\r\n        Util.place(\"crow\", location, counter);\r\n    }\r\n    else if(selection === BatFactory){\r\n        if(player.getMoney() < 300){\r\n            selection = undefined;\r\n            return;\r\n        }\r\n        player.removeMoney(300);\r\n        BatFactory.build(location);\r\n        Util.place(\"batfactory\", location, counter);\r\n    }\r\n    else if(selection === MassiveBatFactory){\r\n        if(player.getMoney() < 1200){\r\n            selection = undefined;\r\n            return;\r\n        }\r\n        player.removeMoney(1200);\r\n        MassiveBatFactory.build(location);\r\n        Util.place(\"massivebatfactory\", location, counter);\r\n    }\r\n    selection = undefined;\r\n}\r\n\r\nexport const handleMouseUp3 = (e, hoverEnd, reset) => {\r\n    if(e.button === 0 && hoverEnd){\r\n        reset();\r\n        return 0;\r\n\r\n    }\r\n}"],"sourceRoot":""}